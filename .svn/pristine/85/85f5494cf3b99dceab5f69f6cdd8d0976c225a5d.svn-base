package com.dbsun.controller.customer;

import com.dbsun.base.BaseController;
import com.dbsun.entity.system.Page;
import com.dbsun.entity.system.PageData;
import com.dbsun.service.customer.CusRecoveryService;
import net.sf.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;
/**
 * 回收
 * @author DongZai
 *
 */
@Controller
@RequestMapping("/cus_recovery")
public class CusRecoveryController extends BaseController {
	
	@Autowired
	private CusRecoveryService recoveryService;
	
	/**
	 * 跳转到回收界面
	 * @return
	 */
	@RequestMapping("/goRecoveryIndex")
	public String goRecoveryIndex(ModelMap model){
		//构建初始数据
		Page page = this.getPage();
		PageData pd = this.getPageData();
		page.setPd(pd);
		List<PageData> recry = null;
		try {
			recry = recoveryService.getPageRecoveryLst(this.putUserIdAdDeLAdPosPd(page, pd));
		} catch (Exception e) {
			e.printStackTrace();
		}
		model.addAttribute("recryTableLst",recry);
		model.addAttribute("page",page);
		System.out.println(model);
		return "html/system/customer/cusRecovery";
	}
	
	/**
	 * 回收列表数据
	 * @param
	 * @return
	 */
	@RequestMapping("/getPageRecoveryLst")
	@ResponseBody
	public JSONObject getPageRecoveryLst(){
		PageData pd = this.getPageData();
		Page page = this.getPage();
		page.setPd(pd);
		List<PageData> confSignLst = null;
		try {
			confSignLst = recoveryService.getPageRecoveryLst(this.putUserIdAdDeLAdPosPd(page, pd));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return viewReturnPageData(page, confSignLst);
	}
	
	/**
	 * 回收客户重分配 -- 选择条数分配
	 * @param
	 * @return
	 */
	@RequestMapping("/updateReAllotOfLimit")
	@ResponseBody
	public JSONObject updateReAllotOfLimit(){
		PageData pd = this.getPageData();
		return this.getAddOrUpdJson(recoveryService.updateReAllotOfLimit(this.putUserPd(pd)));
	}
	
}
