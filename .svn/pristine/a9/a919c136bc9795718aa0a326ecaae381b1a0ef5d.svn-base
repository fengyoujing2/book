package com.dbsun.controller.settleAccounts;

import com.dbsun.base.BaseController;
import com.dbsun.entity.system.Page;
import com.dbsun.entity.system.PageData;
import com.dbsun.service.settleAccounts.SettleAccountsService;
import net.sf.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * @author zhao yi
 * @create 2018-08-14 9:56
 * @desc 结账流程
 **/
@Controller
@RequestMapping("settle_accounts")
public class SettleAccountsController extends BaseController {


    @Autowired
    private SettleAccountsService settleAccountsService;


    /********************************************** 结账处理 ***********************************************/


    /***
     * 跳转未结账页面
     * @return
     */
    @RequestMapping("showStayAccount")
    public String showStayAccount() {
        return "html/system/finance/stayAccount";
    }

    /***
     * 跳转未结账页面
     * @return
     */
    @RequestMapping("showCheckAccount")
    public String showCheckAccount() {
        return "html/system/finance/checkAccount";
    }


    /***
     * 未结账
     * 获得账单签单列表 YBCS056_TP  0-未结账
     * @desc 查询已放贷的数据
     * @return
     */
    @ResponseBody
    @RequestMapping("getPageAccountListIsUnsettledAccount")
    public JSONObject getPageAccountListIsUnsettledAccount() {
        Page page = this.getPage();
        PageData pd = this.getPageData();
        pd.putAll(this.getUserPd());
        page.setPd(pd);
        return this.viewReturnPageData(page, settleAccountsService.getPageAccountListIsUnsettledAccount(page));
    }

    /***
     * 已结账
     * 获得账单签单列表 YBCS056_TP     1-未完全结账  2完全结账
     * @desc 查询已放贷的数据
     * @return
     */
    @ResponseBody
    @RequestMapping("getPageAccountListIsHasTheInvoicing")
    public JSONObject getPageAccountListIsHasTheInvoicing() {
        Page page = this.getPage();
        PageData pd = this.getPageData();
        pd.putAll(this.getUserPd());
        page.setPd(pd);
        return this.viewReturnPageData(page, settleAccountsService.getPageAccountListIsHasTheInvoicing(page));
    }


    /***
     * 获得指定签单-结账明细
     * @Param YBCS001
     * @return
     */
    @ResponseBody
    @RequestMapping("getPageSettledStatement")
    public JSONObject getPageSettledStatement() {
        Page page = this.getPage();
        PageData pd = this.getPageData();
        pd.putAll(this.getUserPd());
        page.setPd(pd);
        return this.viewReturnPageData(page, settleAccountsService.getPageSettledStatement(page));
    }

    /***
     *
     * 查询-根据签单获得所有的人员信息(添加账单结账页面-初始化数组)
     * @desc 做单人员, 做单组长, 做单部长, 客户经理, 客户组长, 客户总监
     * @return
     */
    @ResponseBody
    @RequestMapping("getAddCheckoutInitialization")
    public JSONObject getAddCheckoutInitialization() {
        PageData pd = this.getPageData();
        return this.getSucJson(settleAccountsService.getAddCheckoutInitialization(pd));
    }

    /***
     * 查询-根据签单获得所有的渠道(添加账单结账页面-初始化数组)
     * @desc 渠道
     * @return
     */
    @ResponseBody
    @RequestMapping("getAllchannels")
    public JSONObject getAllchannels() {
        PageData pd = this.getPageData();
        return this.getSucJson(settleAccountsService.getAllchannels(pd));
    }


    /***
     * 添加账单
     * @return
     */
    @ResponseBody
    @RequestMapping("addAccount")
    public JSONObject addAccount() {
        PageData pd = this.getPageData();
        pd.putAll(this.getUserPd());
        return this.getAddOrUpdJson(settleAccountsService.addAccount(pd));
    }

    /***
     * 修改账单
     * @return
     */
    @ResponseBody
    @RequestMapping("updAccount")
    public JSONObject updAccount() {
        PageData pd = this.getPageData();
        return this.getAddOrUpdJson(settleAccountsService.updAccount(pd));
    }

    /********************************************** 退款处理 ***********************************************/


    /***
     * 获得指定签单-退款明细
     * @return
     */
    @ResponseBody
    @RequestMapping("getPageRefundListByYBCS001")
    public JSONObject getPageRefundListByYBCS001() {
        Page page = this.getPage();
        PageData pd = this.getPageData();
        pd.putAll(this.getUserPd());
        page.setPd(pd);
        return this.viewReturnPageData(page, settleAccountsService.getPageRefundListByYBCS001(page));
    }

    /***
     * 获得-新增退款初始化属性
     * @return
     */
    @ResponseBody
    @RequestMapping("getRefundInitializationByYBCS001")
    public JSONObject getRefundInitializationByYBCS001() {
        PageData pd = this.getPageData();
        return this.getSucJson(settleAccountsService.getRefundInitializationByYBCS001(pd));
    }


    /***
     * 添加退款单
     * @return
     */
    @ResponseBody
    @RequestMapping("addRefund")
    public JSONObject addRefund() {
        PageData pd = this.getPageData();
        pd.putAll(this.getUserPd());
        return this.getAddOrUpdJson(settleAccountsService.addRefund(pd));
    }

    /***
     * 修改退款单
     * @return
     */
    @ResponseBody
    @RequestMapping("updRefund")
    public JSONObject updRefund() {
        PageData pd = this.getPageData();
        return this.getAddOrUpdJson(settleAccountsService.updRefund(pd));
    }

}
