package com.dbsun.controller.versions;

import com.dbsun.base.BaseController;
import com.dbsun.entity.system.Page;
import com.dbsun.entity.system.PageData;
import com.dbsun.service.versions.VersionsMessageService;
import com.dbsun.util.DateUtil;
import net.sf.json.JSONObject;
import org.apache.catalina.servlet4preview.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Map;

/**
 * @author zhao yi
 * @create 2018-06-26 16:26
 * @desc 版本消息
 **/
@RequestMapping("vers_msg")
@Controller
public class VersionsMessageController extends BaseController {

    @Autowired
    private VersionsMessageService messageService;


    /**
     * 跳转页面 版本号管理页面
     */
    @RequestMapping("showVersionIndex")
    public String showVersionIndex() {
        return "html/system/version/versionIndex";
    }


    /**
     * 获得所有历史版本
     */
    @RequestMapping("getPageVersionsMsgLst")
    @ResponseBody
    public JSONObject getPageVersionsMsgLst() {
        Page page = this.getPage();
        page.setPd(this.getPageData());
        return viewReturnPageData(page, messageService.getPageVersionsMsgLst(page));
    }

    /**
     * 获得指定的版本  VERM001
     * 如果不传参数,默认显示最新的的版本信息
     */
    @RequestMapping("getVersionsMsgById")
    @ResponseBody
    public JSONObject getVersionsMsgById() {
        PageData pd = this.getPageData();
        return getSucJson(messageService.getVersionsMsgById(pd));

    }

    @RequestMapping("updateVersionsMsg")
    @ResponseBody
    public JSONObject updateVersionsMsg() {
        PageData pd = this.getPageData();
        return getAddOrUpdJson(messageService.updateVersionsMsg(pd));
    }

    @RequestMapping("delVersionsMsg")
    @ResponseBody
    public JSONObject delVersionsMsg() {
        PageData pd = this.getPageData();
        return getAddOrUpdJson(messageService.delVersionsMsg(pd));

    }

    /***
     * 前台传 List内容 1. 2. 3.
     */
    @RequestMapping(value = "addVersionsMsg")
    @ResponseBody
    public JSONObject addVersionsMsg() {
        PageData pd = this.getPageData();
        try {
            return getAddOrUpdJson(messageService.addVersionsMsg(pd));
        } catch (DuplicateKeyException e) {
            JSONObject rs = new JSONObject();
            rs.put("msg", "201");
            rs.put("result", "版本号冲突");
            return rs;
        } catch (RuntimeException e) {
            return getFalJson();
        }

    }
}
