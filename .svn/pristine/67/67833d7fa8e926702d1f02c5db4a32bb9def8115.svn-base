<!DOCTYPE html>
<html  xmlns:th="http://www.thymeleaf.org">
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0">

    <!--360浏览器优先以webkit内核解析-->

    <title>营销中心—日报表</title>

    <link rel="shortcut icon" href="favicon.ico">
    <link href="../static/css/bootstrap.min.css?v=3.3.6" rel="stylesheet">
    <link href="../static/css/font-awesome.css?v=4.4.0" rel="stylesheet">

    <link href="../static/css/animate.css" rel="stylesheet">
    <link href="../static/css/style.css?v=4.1.0" rel="stylesheet">

    <link rel="stylesheet" href="../static/element-ui/lib/theme-chalk/index.css">

    <script type="text/javascript">
        //获取html元素
        var html = document.getElementsByTagName('html')[0];
        //屏幕的宽度（兼容处理）
        var w = document.documentElement.clientWidth || document.body.clientWidth;
        //750这个数字是根据你的设计图的实际大小来的，所以值具体根据设计图的大小
        html.style.fontSize = w / 1366 + "px";
    </script>

    <script src="../static/js/vue.js"></script>
    <script src="../static/element-ui/lib/index.js"></script>
    <script src="../static/js/jquery.min.js"></script>

    <style>
        body{
            height: 1500px !important;
            overflow: scroll;
        }
        .cusMTable{
            margin-top:6px;
            margin-bottom: 100px;
        }
        .cusMTable .el-table thead.is-group th{
            background-color: #4aa5fb;
            color:#fff;
        }
        .el-table .odd-row {
            background: #f1f7fe !important;
            color:#878787 !important;
        }
        .el-table .even-row {
            background: #ffffff !important;
            color:#878787 !important;
        }
        .el-input-group__append{
            color: #4aa5fb !important;
        }
        .top_divR{
            margin-right: 20px;
        }
/*        // 去掉input[type=number]默认的加减号*/
        input[type='number'] {
            -moz-appearance:textfield;
        }
        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        .el-table td{
            padding: 4px 0 !important;
        }

        .el-table th>.cell{
            text-align: center;
        }
        .el-message-box {
            margin-top: -300px;
        }
    </style>
</head>

<body style="background-color:#f1f7fe;margin:10px;">
    <div id="cusReceiptApp" v-cloak>
        <div>
                <el-cascader size="mini" v-model="selParment"
                    :options="moreAlloatArr1"
                             placeholder="请选择部门"
                    change-on-select
                    @change="handleChangeMore" class="top_divR">
                </el-cascader>
                <el-cascader
                    :options="moreAlloatArr2" size="mini"
                             placeholder="请选择人员"
                    v-model="selMana"  class="top_divR">
                </el-cascader>
                <el-date-picker
                  v-model="time" size="mini"
                  type="daterange"
                          value-format="yyyy-MM-dd"
                  range-separator="至"
                  start-placeholder="开始日期"
                  end-placeholder="结束日期">
                </el-date-picker>
            <el-button size="mini" type="warning" style="background-color:#fd8c12;margin-left:20px;" class="top_divR" @click="checkUser">查询</el-button>
            <el-button size="mini" type="primary" class="top_divR" @click="clearCheck">清空</el-button>
        </div>
        <div>
            <div class="cusMTable">
                <el-table
                    :data="tableData"
                    :span-method="objectSpanMethod"
                    :row-class-name="tableRowClassName"
                    border
                    :height="clientH"
                    :summary-method="getSummaries"
                      show-summary
                      empty-text='正在加载数据'
                    style="width: 100%; margin-top: 20px">
                    <el-table-column
                      prop="CENTERNAME"
                      label="中心">
                    </el-table-column>
                    <el-table-column
                      prop="DEPT_NAME"
                      label="所属部门">
                    </el-table-column>
                    <el-table-column
                      prop="NAME"
                      label="客户经理">
                    </el-table-column>
                    <el-table-column
                      prop="LEV"
                      label="级别">
                    </el-table-column>
                    <el-table-column
                      prop="YBCF0012_SUM"
                      label="通话日长(s)">
                    </el-table-column>
                    <el-table-column
                      prop="today_intention"
                      label="意向客户量">
                    </el-table-column>
                    <el-table-column
                      prop="month_interested"
                      label="月累计意向客户量">
                    </el-table-column>
                    <el-table-column
                      prop="today_door"
                      label="上门量">
                    </el-table-column>
                    <el-table-column
                      prop="month_door"
                      label="月累计上门量">
                    </el-table-column>
                    <el-table-column label="签单数">
                        <el-table-column
                          prop="today_house_loan"
                          label="房贷">
                        </el-table-column>
                        <el-table-column
                          prop="today_the_credit"
                          label="信贷">
                        </el-table-column>
                    </el-table-column>
                    <el-table-column label="月累计签单数">
                        <el-table-column
                          prop="month_house_loan"
                          label="房贷">
                        </el-table-column>
                        <el-table-column
                          prop="month_credit_loan"
                          label="信贷">
                        </el-table-column>
                    </el-table-column>
                    <el-table-column label="已签单状态">
                        <el-table-column
                          prop="month_door_shut"
                          label="被拒量">
                        </el-table-column>
                        <el-table-column
                          prop="month_waste"
                          label="废单量">
                        </el-table-column>
                        <el-table-column
                          prop="month_chargeback"
                          label="退单量">
                        </el-table-column>
                        <el-table-column
                          prop="isTrue"
                          label="正常量">
                        </el-table-column>
                    </el-table-column>
                  </el-table>
            </div>

        </div>
    </div>
</body>
<script th:inline="javascript">
    var basePath="/"+window.location.pathname.split("/")[1];
    var app=window.parent.App;
    var clientHeight=window.parent.window.innerHeight - 200;
    console.log(clientHeight);
    new Vue({
        el:"#cusReceiptApp",
        data(){
            return {
//                搜索客户条件
                soMoreUserIpt:{},
                moreAlloatArr1:[],
                moreAlloatArr2:[],
                selParment:[],
                selMana:[],
                tableData:[],
                rowsNum1:[],
                rowsNum2:[],
                colNum1:0,
                colNum2:0,
//                搜索时间范围
                time:[],
                clientH:clientHeight
            }
        },
//        DOM渲染前执行
        mounted(){
            this.getDepartment();
            this.handleCurrentChange();
        },
        methods:{
            //            获取部门列表
            getDepartment(){
//                DEPT_ID   获取部门
                let that=this;
                $.ajax({
                    type:"GET",
                    url:`${basePath}/user/searchDeptAndMeLst`,
                    data:"",
                    success:function(data){
                        console.log(data);
                        if(data.msg=="200"){
                            that.moreAlloatArr1=data.result;
                        }
                    }
                })
            },
//            改变部门选择人员
            handleChangeMore(value){
                this.soMoreUserIpt.DEPT_LAYERORDER_Sea=(value[value.length-1]).DEPT_LAYERORDER;
                let DEPT_ID=(value[value.length-1]).DEPT_ID;
                let that=this;
                $.ajax({
                    type:"GET",
                    url:`${basePath}/user/deptAndUserLst`,
                    data:{DEPT_ID:DEPT_ID},
                    success:function(data){
                        that.moreAlloatArr2=data.result;
                    }
                })
            },

//            表格间隔行变色
            tableRowClassName({row,rowIndex}){
                if(rowIndex==1){

                }else if (rowIndex%2 == 0) {
                    // return 'odd-row';
                }
                return 'even-row';
            },
//            查询搜索客户
            checkUser(){
                if(this.time){
                    if(this.time.length !=0){
                        this.soMoreUserIpt.startTime=this.time[0]+' 00:00:00';
                        this.soMoreUserIpt.endTime=this.time[1]+' 23:59:59';
                    }
                }else{
                    delete this.soMoreUserIpt.startTime;
                    delete this.soMoreUserIpt.endTime;
                }
                if(this.selMana !=""){
                    this.soMoreUserIpt.USER_ID_Sea=this.selMana.toString();
                }
                this.handleCurrentChange();
            },
//            清空搜索条件，并回到初始状态
            clearCheck(){
                this.selParment=[];
                this.selMana=[];
                this.time=[];
                this.soMoreUserIpt={};
                this.handleCurrentChange();
            },
//            当前页翻页
            handleCurrentChange(){
                let that=this;
                $.ajax({
                    type:"GET",
                    url:`${basePath}/charts/marketingCenterStatisticReport`,
                    data:that.soMoreUserIpt,
                    success:function(data){
                        console.log("//////////////////////////////")
                        console.log(data);
                        that.normalize(data.result);
                        that.tableData=data.result;
                    }
                })
            },
            normalize(data){
                this.rowsNum1=[];
                this.rowsNum2=[];
                return data.map((item,index) =>{
                    if(index===0){
                        this.rowsNum1.push(1);
                        this.rowsNum2.push(1);
                        this.colNum1=0;
                        this.colNum2=0;
                    }else{
                        if(item.DEPT_PID===data[index-1].DEPT_PID){
                            this.rowsNum1[this.colNum1]+=1;
                            this.rowsNum1.push(0);
                        }else{
                            this.rowsNum1.push(1);
                            this.colNum1=index;
                        }
                        if(item.DEPT_ID===data[index-1].DEPT_ID){
                            this.rowsNum2[this.colNum2]+=1;
                            this.rowsNum2.push(0);
                        }else{
                            this.rowsNum2.push(1);
                            this.colNum2=index;
                        }
                    }
                })
            },
            objectSpanMethod({ row, column, rowIndex, columnIndex }) {
                if (columnIndex === 0) {
                    const _row=this.rowsNum1[rowIndex];
                    const _col=_row>0? 1: 0;
                    return {
                        rowspan:_row,
                        colspan:_col
                    }
                }
                if(columnIndex === 1){
                    const _row2=this.rowsNum2[rowIndex];
                    const _col2=_row2>0? 1: 0;
                    return {
                        rowspan:_row2,
                        colspan:_col2
                    }
                }

            },
            getSummaries(param) {
              const { columns, data } = param;
              const sums = [];
              columns.forEach((column, index) => {
                if (index === 0) {
                  sums[index] = '合计';
                  return;
                }
                if(index === 2){
                  sums[index] = this.tableData.length;
                  return;
                }
                const values = data.map(item => Number(item[column.property]));
                if (!values.every(value => isNaN(value))) {
                  sums[index] = values.reduce((prev, curr) => {
                    const value = Number(curr);
                    if (!isNaN(value)) {
                      return prev + curr;
                    } else {
                      return prev;
                    }
                  }, 0);
                  sums[index] += '';
                } else {
                  sums[index] = '';
                }
              });

              return sums;
            }
        }
    })

</script>
</html>
