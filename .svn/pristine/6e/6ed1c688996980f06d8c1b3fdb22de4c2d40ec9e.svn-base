package com.dbsun.controller.background;

import java.util.List;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.dbsun.base.BaseController;
import com.dbsun.entity.system.Page;
import com.dbsun.entity.system.PageData;
import com.dbsun.service.background.BacTransferService;
/**
 * 做单转移
 * @author DongZai
 *
 */
@Controller
@RequestMapping("/bac_transfer")
public class BacTransferController extends BaseController {
	
	@Autowired
	private BacTransferService bacTransferService;
	
	/**
	 * 跳转到做单转移界面
	 * @return
	 */
	@RequestMapping("/goPageTransferIndex")
	public String goPageTransferIndex(ModelMap model){
		//构建初始数据
		Page page = this.getPage();
		PageData pd = this.getPageData();
		page.setPd(pd);
		List<PageData> transferLst = null;
		try {
			transferLst = bacTransferService.getPageTransferLst(this.putUserIdPd(page, pd));
		} catch (Exception e) {
			e.printStackTrace();
		}
		model.addAttribute("transferTableLst",transferLst);
		model.addAttribute("page",page);
		System.out.println("跳转页面返回的****:" + model);
		return "html/system/background/signTransfer";
	}
	
	/**
	 * 做单转移列表数据
	 * @param model
	 * @return
	 */
	@RequestMapping("/getPageTransferLst")
	@ResponseBody
	public JSONObject getPageTransferLst(){
		PageData pd = this.getPageData();
		Page page = this.getPage();
		page.setPd(pd);
		List<PageData> transferLst = null;
		try {
			transferLst = bacTransferService.getPageTransferLst(this.putUserIdPd(page, pd));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return viewReturnPageData(page, transferLst);
	}
	
	/**
	 * 做单转移列表数据
	 * @param model
	 * @return
	 */
	@RequestMapping("/updateForTransfer")
	@ResponseBody
	public JSONObject updateForTransfer(){
		PageData pd = this.getPageData();
		return this.getAddOrUpdJson(bacTransferService.updateForTransfer(this.putUserIdPd(pd)));
	}
	
}
