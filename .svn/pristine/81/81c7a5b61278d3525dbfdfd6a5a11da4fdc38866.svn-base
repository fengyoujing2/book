package com.dbsun.controller.background;

import com.dbsun.base.BaseController;
import com.dbsun.entity.system.Page;
import com.dbsun.entity.system.PageData;
import com.dbsun.service.background.BacConfService;
import net.sf.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;

/**
 * 待后台确认做单
 *
 * @author DongZai
 */
@Controller
@RequestMapping("/bac_conf")
public class BacConfController extends BaseController {

    @Autowired
    private BacConfService bacConfService;


    /**
     * 跳转到后台确认界面
     *
     * @return
     */
    @RequestMapping("/goPageConfIndex")
    public String goPageConfIndex(ModelMap model) {
        //构建初始数据
        Page page = this.getPage();
        PageData pd = this.getPageData();
        page.setPd(pd);
        List<PageData> wtConfLst = null;
        try {
            wtConfLst = bacConfService.getPageConfLst(this.putUserIdPd(page, pd));
        } catch (Exception e) {
            e.printStackTrace();
        }
        model.addAttribute("wtConfTableLst", wtConfLst);
        model.addAttribute("page", page);
        System.out.println("跳转页面返回的****:" + model);
        return "html/system/background/sureSingle";
    }

    /**
     * 后台确认列表数据
     *
     * @param model
     * @return
     */
    @RequestMapping("/getPageConfLst")
    @ResponseBody
    public JSONObject getPageConfLst() {
        PageData pd = this.getPageData();
        Page page = this.getPage();
        page.setPd(pd);
        List<PageData> wtConfLst = null;
        try {
            wtConfLst = bacConfService.getPageConfLst(this.putUserIdPd(page, pd));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return viewReturnPageData(page, wtConfLst);
    }

    /**
     * 确认做单
     *
     * @return
     */
    @RequestMapping("/updateForConfSingle")
    @ResponseBody
    public JSONObject updateForConfSingle() {
        PageData pd = this.getPageData();
        try {
            return this.getAddOrUpdJson(bacConfService.updateForConfSingle(this.putUserIdPd(pd)));
        } catch (Exception e) {
            e.printStackTrace();
            return this.getFalJson();
        }
    }

}
