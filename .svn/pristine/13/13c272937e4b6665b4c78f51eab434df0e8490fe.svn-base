package com.dbsun.util;

import net.sf.json.JSONObject;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

/**
 * 短信API服务调用示例代码 － 聚合数据
 * 在线接口文档：http://www.juhe.cn/docs/54
 **/

public class JuheSmsPushUtil {
    public static final String DEF_CHATSET = "UTF-8";
    public static final int DEF_CONN_TIMEOUT = 30000;
    public static final int DEF_READ_TIMEOUT = 30000;
    public static String userAgent = "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.66 Safari/537.36";

    //配置您申请的KEY
    public static final String APPKEY = "0ebbbe113066f30bdf338c432194e67e";

    //1.屏蔽词检查测
    public static void getRequest1() {
        String result = null;
        String url = "http://v.juhe.cn/sms/black";//请求接口地址
        Map params = new HashMap();//请求参数
        params.put("word", "");//需要检测的短信内容，需要UTF8 URLENCODE
        params.put("key", APPKEY);//应用APPKEY(应用详细页查询)

        try {
            result = net(url, params, "GET");
            JSONObject object = JSONObject.fromObject(result);
            if (object.getInt("error_code") == 0) {
                System.out.println(object.get("result"));
            } else {
                System.out.println(object.get("error_code") + ":" + object.get("reason"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //2.发送短信
    public static int getRequest2(String phoneNum, String code) {
        String result = null;
        String url = "http://v.juhe.cn/sms/send";//请求接口地址
        Map params = new HashMap();//请求参数
        params.put("mobile", phoneNum);//接收短信的手机号码
        params.put("tpl_id", "50041");//短信模板ID，请参考个人中心短信模板设置
        Map map = new HashMap();
        map.put("#code#", code);
        params.put("tpl_value", urlencode(map));//变量名和变量值对。如果你的变量名或者变量值中带有#&=中的任意一个特殊符号，请先分别进行urlencode编码后再传递，<a href="http://www.juhe.cn/news/index/id/50" target="_blank">详细说明></a>
        params.put("key", APPKEY);//应用APPKEY(应用详细页查询)
        params.put("dtype", "json");//返回数据的格式,xml或json，默认json

        JSONObject object = null;
        try {
            result = net(url, params, "GET");
            object = JSONObject.fromObject(result);
            if (object.getInt("error_code") == 0) {
                System.out.println(object.get("result") + "111");
            } else {
                System.out.println(object.get("error_code") + ":" + object.get("reason"));
            }
        } catch (Exception e) {
            System.out.println(11);
            e.printStackTrace();
        }
        return object.getInt("error_code");
    }

    //2.发送短信(根据模板发送短信)

    /**
     * 传入参数username客户经理姓名,userphone客户经理电话,username1跟单员姓名,userphone1跟单员电话
     */
    public static Map getCustomSms(String phoneNum, String username, String userphone, String username1, String userphone1) {
        String result = null;
        String url = "http://v.juhe.cn/sms/send";//请求接口地址
        Map params = new HashMap();//请求参数
        params.put("mobile", phoneNum);//接收短信的手机号码
        params.put("tpl_id", "72609");//短信模板ID，请参考个人中心短信模板设置
        Map map = new HashMap();
        map.put("#username#", username);
        map.put("#userphone#", userphone);
        map.put("#username1#", username1);
        map.put("#userphone1#", userphone1);
        params.put("tpl_value", urlencode(map));//变量名和变量值对。如果你的变量名或者变量值中带有#&=中的任意一个特殊符号，请先分别进行urlencode编码后再传递，<a href="http://www.juhe.cn/news/index/id/50" target="_blank">详细说明></a>
        params.put("key", APPKEY);//应用APPKEY(应用详细页查询)
        params.put("dtype", "json");//返回数据的格式,xml或json，默认json

        JSONObject object = null;
        map = new HashMap();
        try {
            result = net(url, params, "GET");
            object = JSONObject.fromObject(result);
            if (object.getInt("error_code") == 0) {
                System.out.println(object.get("result") + "111");
            } else {
                System.out.println(object.get("error_code") + ":" + object.get("reason"));
            }
            map.put("code", object.getInt("error_code"));
            map.put("reason", object.get("reason"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return map;
    }

    /**
     * 传入参数bank银行名称day还款日
     */
    public static Map getCustomByLoan(String phoneNum, String bank, String day) {
        String result = null;
        String url = "http://v.juhe.cn/sms/send";//请求接口地址
        Map params = new HashMap();//请求参数
        params.put("mobile", phoneNum);//接收短信的手机号码
        params.put("tpl_id", "74007");//短信模板ID，请参考个人中心短信模板设置
        Map map = new HashMap();
        map.put("#bank#", bank);
        map.put("#day#", day);
        params.put("tpl_value", urlencode(map));//变量名和变量值对。如果你的变量名或者变量值中带有#&=中的任意一个特殊符号，请先分别进行urlencode编码后再传递，<a href="http://www.juhe.cn/news/index/id/50" target="_blank">详细说明></a>
        params.put("key", APPKEY);//应用APPKEY(应用详细页查询)
        params.put("dtype", "json");//返回数据的格式,xml或json，默认json

        JSONObject object = null;
        map = new HashMap();
        try {
            result = net(url, params, "GET");
            object = JSONObject.fromObject(result);
            if (object.getInt("error_code") == 0) {
                System.out.println(object.get("result") + "111");
            } else {
                System.out.println(object.get("error_code") + ":" + object.get("reason"));
            }
            map.put("code", object.getInt("error_code"));
            map.put("reason", object.get("reason"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return map;
    }

    /**
     * 向客户发送 离职人员的信息
     *
     * @Author: zhao yi
     * @Date : 2018/7/13 9:16
     * @Param : [phoneNum 手机号码, bank, day]
     * @return: java.util.Map
     */
    public static Map sendDimissionMsgCus(String phoneNum, String username) {
        String result = null;
        String url = "http://v.juhe.cn/sms/send";//请求接口地址
        Map params = new HashMap();//请求参数
        params.put("mobile", phoneNum);//接收短信的手机号码
        params.put("tpl_id", "88261");//短信模板ID，请参考个人中心短信模板设置
        Map map = new HashMap();
        map.put("#username#", username);
        params.put("tpl_value", urlencode(map));//变量名和变量值对。如果你的变量名或者变量值中带有#&=中的任意一个特殊符号，请先分别进行urlencode编码后再传递，<a href="http://www.juhe.cn/news/index/id/50" target="_blank">详细说明></a>
        params.put("key", APPKEY);//应用APPKEY(应用详细页查询)
        params.put("dtype", "json");//返回数据的格式,xml或json，默认json

        JSONObject object = null;
        map = new HashMap();
        try {
            result = net(url, params, "GET");
            object = JSONObject.fromObject(result);
            if (object.getInt("error_code") == 0) {
                System.out.println(object.get("result") + "111");
            } else {
                System.out.println(object.get("error_code") + ":" + object.get("reason"));
            }
            map.put("code", object.getInt("error_code"));
            map.put("reason", object.get("reason"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return map;
    }


    public static void main(String[] args) {
        getCustomSms("13540256984","杜波","13678127547","张三","13678787878");
	}

    //获取验证码
    public static String getCode() {
        String str = "0123456789";
        StringBuilder sb = new StringBuilder(4);
        for (int i = 0; i < 4; i++) {
            char ch = str.charAt(new Random().nextInt(str.length()));
            sb.append(ch);
        }
        System.out.println(sb.toString());
        return sb.toString();
    }

    /**
     * @param strUrl 请求地址
     * @param params 请求参数
     * @param method 请求方法
     * @return 网络请求字符串
     * @throws Exception
     */
    public static String net(String strUrl, Map params, String method) throws Exception {
        HttpURLConnection conn = null;
        BufferedReader reader = null;
        String rs = null;
        try {
            StringBuffer sb = new StringBuffer();
            if (method == null || method.equals("GET")) {
                strUrl = strUrl + "?" + urlencode(params);
            }
            URL url = new URL(strUrl);
            conn = (HttpURLConnection) url.openConnection();
            if (method == null || method.equals("GET")) {
                conn.setRequestMethod("GET");
            } else {
                conn.setRequestMethod("POST");
                conn.setDoOutput(true);
            }
            conn.setRequestProperty("User-agent", userAgent);
            conn.setUseCaches(false);
            conn.setConnectTimeout(DEF_CONN_TIMEOUT);
            conn.setReadTimeout(DEF_READ_TIMEOUT);
            conn.setInstanceFollowRedirects(false);
            conn.connect();
            if (params != null && method.equals("POST")) {
                try {
                    DataOutputStream out = new DataOutputStream(conn.getOutputStream());
                    out.writeBytes(urlencode(params));
                } catch (Exception e) {
                    // TODO: handle exception
                }
            }
            InputStream is = conn.getInputStream();
            reader = new BufferedReader(new InputStreamReader(is, DEF_CHATSET));
            String strRead = null;
            while ((strRead = reader.readLine()) != null) {
                sb.append(strRead);
            }
            rs = sb.toString();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (reader != null) {
                reader.close();
            }
            if (conn != null) {
                conn.disconnect();
            }
        }
        return rs;
    }

    //将map型转为请求参数型
    public static String urlencode(Map<String, Object> data) {
        StringBuilder sb = new StringBuilder();
        for (Map.Entry i : data.entrySet()) {
            try {
                sb.append(i.getKey()).append("=").append(URLEncoder.encode(i.getValue() + "", "UTF-8")).append("&");
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }
        }
        return sb.toString();
    }
}
