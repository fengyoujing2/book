package com.dbsun.service.background;

import com.dbsun.entity.system.Page;
import com.dbsun.entity.system.PageData;
import com.dbsun.mapper.background.BacConfMapper;
import com.dbsun.service.BaseService;
import com.dbsun.service.finance.FinNumService;
import com.dbsun.service.fluxswitch.FSService;
import com.dbsun.util.FollowUtil;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Service
public class BacConfService extends BaseService {

    @Autowired
    private BacConfMapper bacConfMapper;
    @Autowired
    private FinNumService nNumService;

    @Autowired
    private FSService fsService;

    public List<PageData> getPageConfLst(Page page) {
        return bacConfMapper.getPageConfLst(page);
    }

    @Transactional(isolation = Isolation.READ_COMMITTED, propagation = Propagation.REQUIRED)
    public int updateForConfSingle(PageData pd, PageData userPd) throws NullPointerException, Exception {
        int ret = 0;
        try {
            bacConfMapper.updateForConfSingle(pd);
            //添加-不能做单-跟进记录
            String ybcs044 = pd.getString("YBCS044");
            ybcs044 = StringUtils.isNotBlank(ybcs044) ? FollowUtil.CUS_WTRCPT_STR + " 理由: " + pd.getString("YBCS044") : FollowUtil.CUS_WTRCPT_STR;
            this.addCusFlw(pd, ybcs044, FollowUtil.CUS_WTRCPT, pd.getString("YBC001"));

            // 调用流程控制器
            // 调用流程控制器
            boolean flag = fsService.invokeSwitch(pd, userPd);

            ret = 1;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ret;
    }


}
